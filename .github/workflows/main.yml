name: Deploy Application

on:
    push:
        branches:
            - tpb

jobs:
    create-deployment-environment:
        name: Create Deployment Environment
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 18.12.1

            - name: Compile Assets
              run: |
                  npm install
                  npm run production

            - name: Configure PHP
              uses: shivammathur/setup-php@master
              with:
                  php-version: 8.0

            - name: Configure Composer
              run: |
                  composer update
                  composer install --optimize-autoloader --no-dev --no-interaction --prefer-dist

            - name: Create Deployment archive
              env:
                  GITHUB_SHA: ${{ github.sha }}
              run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules *

            - name: Store archive for distribution
              uses: actions/upload-artifact@v3
              with:
                  name: app-build
                  path: ${{github.sha}}.tar.gz

    prepare-release-on-server:
        name: Release on server
        runs-on: ubuntu-latest
        needs: create-deployment-environment
        steps:
            - uses: actions/download-artifact@v3
              with:
                  name: app-build

            - name: Upload
              uses: appleboy/scp-action@master
              with:
                  host: ${{ SECRETS.TPB_HOST }}
                  port: ${{ SECRETS.TPB_PORT }}
                  username: ${{ SECRETS.TPB_USERNAME }}
                  password: ${{ SECRETS.TPB_PASSWORD }}
                  source: ${{github.sha}}.tar.gz
                  target: public_html

            - name: Extract archive and create directory
              uses: appleboy/ssh-action@master
              env:
                  GITHUB_SHA: ${{ github.sha }}
              with:
                  host: ${{ SECRETS.TPB_HOST }}
                  port: ${{ SECRETS.TPB_PORT }}
                  username: ${{ SECRETS.TPB_USERNAME }}
                  password: ${{ SECRETS.TPB_PASSWORD }}
                  envs: GITHUB_SHA
                  script: |
                      tar xzf public_html/${GITHUB_SHA}.tar.gz -C "public_html"

    active-release:
        name: TPB Server - Releasing
        runs-on: ubuntu-latest
        needs: [create-deployment-environment, prepare-release-on-server]
        steps:
            - name: Active Release
              uses: appleboy/ssh-action@master
              env:
                  GITHUB_SHA: ${{github.sha}}
                  BASE_PATH: public_html
                  ENV: ${{ SECRETS.ENV_TPB }}
                  ARTISAN_KEYS: ${{SECRETS.ARTISAN_KEYS}}
              with:
                  host: ${{ SECRETS.TPB_HOST }}
                  port: ${{ SECRETS.TPB_PORT }}
                  username: ${{ SECRETS.TPB_USERNAME }}
                  password: ${{ SECRETS.TPB_PASSWORD }}
                  envs: GITHUB_SHA,BASE_PATH,ENV,ARTISAN_KEYS
                  script: |
                      echo ${GITHUB_SHA}
                      printf "%s" "$ENV" > "${BASE_PATH}/.env"
                      printf "%s" "${GITHUB_SHA}" > "${BASE_PATH}/${GITHUB_SHA}.txt"
                      cd ${BASE_PATH} && ${ARTISAN_KEYS}

    migrating-db:
        name: Migrating Database
        runs-on: ubuntu-latest
        needs:
            [
                create-deployment-environment,
                prepare-release-on-server,
                active-release,
            ]
        steps:
            - name: Migration Init
              uses: appleboy/ssh-action@master
              env:
                  BASE_PATH: public_html
                  ARTISAN_MIGRATE: ${{ SECRETS.ARTISAN_MIGRATE }}
              with:
                  envs: BASE_PATH,ARTISAN_MIGRATE
                  host: ${{ SECRETS.TPB_HOST }}
                  port: ${{ SECRETS.TPB_PORT }}
                  username: ${{ SECRETS.TPB_USERNAME }}
                  password: ${{ SECRETS.TPB_PASSWORD }}
                  script: |
                      cd ${BASE_PATH} && ${ARTISAN_MIGRATE}

    clean-up:
        name: Cleaning Up Artifacts
        runs-on: ubuntu-latest
        needs:
            [
                create-deployment-environment,
                prepare-release-on-server,
                active-release,
                migrating-db,
            ]
        steps:
            - name: Clean up server junk
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ SECRETS.TPB_HOST }}
                  username: ${{ SECRETS.TPB_USERNAME }}
                  port: ${{ SECRETS.TPB_PORT }}
                  password: ${{ SECRETS.TPB_PASSWORD }}
                  script: |
                      rm -rf public_html/${{github.sha}}.tar.gz
                      rm -rf public_html/resources/frontend
